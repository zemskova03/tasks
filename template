#include <iostream>
#include <limits>
using namespace std;

template <typename t1,typename t2>


void max_index(t1* mas, t2 n)
{
    t1 m = mas[0];
    t2 k = 0,i;
    if (n==1) {cout<<"всего один элемент"<<endl;
    return;}

    for ( i = 0; i < n; i++)
        if (m < mas[i])
        {
            m = mas[i];
        }
    for ( i = 0; i < n; i++)
        if (m == mas[i])
        {
            k++;
        }
    if (k==n)
        cout<<"все элементы одинаковые"<<endl;
    else
    {
        cout<<"номер(а) максимального(ых) эл-та(ов) массива:"<<endl;
        for ( i = 0; i < n; i++)
            if (m == mas[i])
            {
                cout<<i+1<<" ";
            }
        cout<<endl;
        return;
    }
}
template <typename t1,typename t2>

void proizvedenie(t1* mas, t2 n)
{    t1 m=0,pr=1;

   t2 k1=0,k2=0,k3=0,k4=0,i;
if (n==1) {cout<<"всего один элемент"<<endl;
    return;}


     for ( i = 0; i < n; i++)
        if (mas[0] == mas[i])
            k1++;

            if (k1==n)
              {cout<<"все элементы одинаковые"<<endl;
              return;}

                 for ( i = 0; i < n; i++)
        if ( mas[i]==0)
                    k2++;
        if ((k2==0)||(k2==1))
        { cout<<"нулевые элементы отсутствуют или всего один нулевой элемент"<<endl;
        return;
        }


 bool z=true;
    while (z)
  { i=0;
  if ( mas[i]==0)
  {k3=i;
  z=false;
  } else i++;
  }
  z=true;

 if (mas[k3]==mas[k3+1])
 {cout<<"нулевые элементы стоят рядом"<<endl;
 return;
 }


 k3++;
for (i=k3;i<n;i++)
    if (mas[i]==0)
{ k4=i;
   break;}


  for (i=k3;i<k4;i++)
   pr=pr*mas[i];

   cout<<"произведение равно="<<pr<<endl;
   return;

}
template <typename t1,typename t2>

void sortirovka (t1* mas, t2 n)
{
   if (n==1) {cout<<"всего один элемент"<<endl;
    return;}

    t2 up=n-1,low=0,k1=0,i;
    t2 last,tmb;

     for (  i = 0; i < n; i++)
        if (mas[0] == mas[i])
            k1++;

            if (k1==n)
              {cout<<"все элементы одинаковые"<<endl;
              return;}



    while (low<up){
            last=-1;//несущ индекс
        for ( i=low;i<up;i++)
        {
            if (mas[i]>mas[i+1])
            {
               tmb=mas[i];
               mas[i]=mas[i+1];
               mas[i+1]=tmb;

           last=i; }
        }
        up=last;


        last= n;
        for(i=up-1;i>=low;i--)
        {
            if (mas[i]>mas[i+1])
            {
                tmb=mas[i];
               mas[i]=mas[i+1];
               mas[i+1]=tmb;
               last=i;}

        }

        low=last+1;
        }

  cout<<"получился массив:"<<endl;
  for (i=0; i<n; i++)
    cout<<mas[i]<<" ";

    return;
}



int main()
{
    setlocale(LC_ALL,"rus");
    int n,i;


cout<<"введите кол-во элементов одномерного массива"<<endl;


while (!(cin >> n) || (cin.peek() != '\n')||(n<=0))
{
    cin.clear();
    while (cin.get() != '\n');
    cout << "Некорректное значение, попробуйте еще раз" << endl;

}

float* mas= new float[n];
            cout<<"заполните массив, введя "<<n << " значений(я)"<<endl;
            for (i=0; i<n; i++)
            {
                cin>>mas[i];
                while (!cin.good())
                {
                    cin.clear();
                    cin.ignore((numeric_limits<streamsize>::max()), '\n');
                    cout<<"Некорректное значение, попробуйте еще раз"<<endl;
                    cin>>mas[i];
                }


            }

    int z;


    bool l=true;
    while (l)
    {
        cout<<endl<<"Возможности:"<<endl<<"1-найти номер максимального элемента заданного массива"<<endl<<
            "2-найти произведение элементов массива, расположенных между первым и вторым нулевыми элементами"<<endl<<
            "3-упорядочить элементы массива по возрастанию (шейкерная сортировка)"<<endl<<"0-выход"<<endl;
        cin>>z;
     /*   while (!(cin >> z) || (cin.peek() != '\n'))
{
    cin.clear();
    while (cin.get() != '\n');
    cout << "Некорректное значение, попробуйте еще раз" << endl;

}*/
 while (!cin.good()||(cin.peek() != '\n'))
                {
                    cin.clear();
                    cin.ignore((numeric_limits<streamsize>::max()), '\n');
                    cout<<"Некорректный ввод, попробуйте еще раз"<<endl;
                    cin>>z;
                }



        switch(z)
        {

        case 1:
        {
            max_index(mas,n);

            break;

        }
        case 2:
        {
        proizvedenie (mas,n);
            break;
        }
        case 3:
        { sortirovka (mas, n);
            break;
        }
        case 0:
        {
            l=false;
            break;
        }
        default :
            cout<<"некорректный ввод, попробуйте еще раз"<<endl;
        }
    }



    delete [] mas;
    return 0;
}
