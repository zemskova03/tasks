#include <iostream>
#include <limits>
using namespace std;

class floatt{
public:
    float a;
   float A[100];
      int q_start;
    int q_end;

      floatt ( int value)
{
      q_start=q_end=value;
      a=value;
      for (int i=0;i<100;i++)
        A[i]=value;}

    void unarsl(){
    a=a+1;
        return ;}
   friend void unarvc(floatt &);

};

 void unarvc(floatt &c ){
     c.a=c.a-1;
 return ;
 }

void operator +(floatt &h, float s)
 {
        h.A[h.q_end] = s;
        h.q_end++;

 return;}

 void operator -- (floatt h)
{{
    if (h.q_start==h.q_end)
    {cout<<"очередь пуста"<<endl;
    return;
    }
    else{

    for( int i=h.q_start; i<h.q_end; i++)
        cout << h.A[i] << "\t";

    cout <<endl;}}
    return;}


void operator +=(floatt h,floatt k)
{cout<<"сумма очередей будет равна: "<<endl;

 for( int i=h.q_start; i<h.q_end; i++)
 {
     cout<<h.A[i]+k.A[i] <<"\t";
 }
return;}

void operator -(floatt h,floatt k)
{
cout<<"разность очередей будет равна: "<<endl;

 for( int i=h.q_start; i<h.q_end; i++)
 {
     cout<<h.A[i]-k.A[i] <<"\t";
 }
    return;}

int main()
{
    setlocale (LC_ALL,"RUS");
    floatt z(0),q1(0),q2(0);


    int b=0,i=0,k1=0,k2=0;
float p=0,s=0;
    bool f=true;
    while(f){

 cout<<"\tВозможности:"<<endl<<"1-1 задание(унарная операция ++ )"<<endl<<"2-1 задание(унарная операция -- )"<<endl<<
 "3-добавление эл-та в очередь"<<endl<<
 "4-просмотр очереди "<<endl<<"5-сложение очередей"<<endl<<
 "6-вычитание очередей "<<endl<<"0-Выход"<<endl;
    int b;
    cin>>b;
    while (!cin.good())
{ cin.clear();
cin.ignore((numeric_limits<streamsize>::max()), '\n');
cout<<"Некорректное значение, попробуйте еще раз"<<endl;
cin>>b;
}
switch (b){
case 1:
       {cout<<"введите значение переменной, с которой произведем унарную операцию ++"<<endl;
    cin>>z.a;
    while (!cin.good())
{ cin.clear();
cin.ignore((numeric_limits<streamsize>::max()), '\n');
cout<<"Некорректное значение, попробуйте еще раз"<<endl;
cin>>z.a;
}

    z.unarsl();
    cout<<"теперь это число="<<z.a<<endl<<endl;break;}
  case 2:  {
            cout<<"введите значение переменной, с которой произведем унарную операцию --"<<endl;
    cin>>z.a;
    while (!cin.good())
{ cin.clear();
cin.ignore((numeric_limits<streamsize>::max()), '\n');
cout<<"Некорректное значение, попробуйте еще раз"<<endl;
cin>>z.a;
}
unarvc(z );
cout<<"теперь это число="<<z.a<<endl<<endl;break;
        }
 case 3:  { cout<<"введите число, которое хотите добавить в очередь"<<endl;

  cin>>p;
      while (!cin.good())
{ cin.clear();
cin.ignore((numeric_limits<streamsize>::max()), '\n');
cout<<"Некорректное значение, попробуйте еще раз"<<endl;
cin>>p;
}
q1+p;
k1++;
break;}

case 4:{--q1;
    break;}

case 5:
{
  if (q1.q_start==q1.q_end)
    {cout<<"первая очередь пуста"<<endl;
    break;
    }

cout<<"заполним вторую очередь"<<endl;

for( int i=0; i<k1; i++)
       {
        cout<<"введите "<<i+1<<" значение"<<endl;
  cin>>s;
      while (!cin.good())
{ cin.clear();
cin.ignore((numeric_limits<streamsize>::max()), '\n');
cout<<"Некорректное значение, попробуйте еще раз"<<endl;
cin>>s;
}
   q2+s;
    }
q1+=q2;

 q2.q_end = 0;
q2.q_start = 0;

 cout<<endl;

break;}
case 6:{
  if (q1.q_start==q1.q_end)
    {cout<<"первая очередь пуста"<<endl;
    break;
    }

cout<<"заполним вторую очередь"<<endl;

for( int i=0; i<k1; i++)
       {
        cout<<"введите "<<i+1<<" значение"<<endl;
  cin>>s;
      while (!cin.good())
{ cin.clear();
cin.ignore((numeric_limits<streamsize>::max()), '\n');
cout<<"Некорректное значение, попробуйте еще раз"<<endl;
cin>>s;
}
   q2+s;
    }
q1-q2;

 q2.q_end = 0;
q2.q_start = 0;

 cout<<endl;
break;}
   case 0:f=false;break;
    default: cout<<"некорректный ввод, попробуйте еще раз"<<endl;
    } }

    return 0;
}
